/* 
 *  Subnet Manager â€“ Java OO en Gegevens Banken Project
 */
package GUI;

import DatabaseConnection.DatabaseUtil;
import Logic.SubnetColors;
import Objects.Subnet;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.ArrayList;

/**
 *
 * @author louisdhauwe
 */
public class SubnetsContainerPanel extends javax.swing.JPanel {
    
    /**
     * Listiner to update UI (when data changes)
     */
    public UpdateListener listener;

        
    /**
     * Creates new form SubnetsContainerPanel
     */
    public SubnetsContainerPanel() {
        initComponents();
        
        updateData();
        
    }
    
    /**
     * Update UI according to data, sets appropriate layout
     */
    public void updateData() {
                
        DatabaseUtil u = DatabaseUtil.getInstance();
        Subnet[] subnets = u.getSubnets();
        int amount = subnets.length;
        
        if (amount == 1) {
            setLayout(new GridLayout(0, 1));
        } else {
            setLayout(new GridLayout(0, 2));
        }
        
        removeAll();
        
        for (int i = 0; i < amount; i++) {

            SubnetPanel p;
            p = new SubnetPanel(subnets[i]);
            p.setBackground(SubnetColors.subnetColors()[i]);
            add(p);
            
            p.listener = new UpdateListener() {

                @Override
                public void update() {
                    updateData();
                    listener.update();
                }
            };
            
            // Java 8 'Lambda expression':
//            p.listener = () -> {
//                updateData();
//                listener.update();
//            };
//            
            
        }
        
        int height = 282 * (amount + (amount % 2)) / 2;
        
        setMinimumSize(new Dimension(920, height));
        setPreferredSize(new Dimension(920, height));
        
        revalidate();
        repaint();
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setMinimumSize(new java.awt.Dimension(920, 800));
        setPreferredSize(new java.awt.Dimension(920, 800));
        setLayout(new java.awt.GridLayout(0, 2));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
